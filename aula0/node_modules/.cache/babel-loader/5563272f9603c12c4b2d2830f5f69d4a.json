{"ast":null,"code":"var _jsxFileName = \"/home/higor/Documentos/web/aula08/src/components/EtiquetasHookForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { DivEtiqueta } from '../styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  nome: yup.string().required(\"O nome é obrigatório\"),\n  email: yup.string().email(\"Digite um e-mail válido!\").required(\"O e-mail é obrigatório\"),\n  cpf: yup.string().min(11, \"O CPF deve ter pelo menos 11 digitos\").required(\"O CPF é obrigatório\")\n}).required();\nexport default function EtiquetasHookForm() {\n  _s();\n\n  var _errors$nome, _errors$email, _errors$cpf;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [listaCliente, setListaCliente] = useState([]);\n\n  function inserirCliente(cliente) {\n    setListaCliente([...listaCliente, cliente]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DivEtiqueta, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(inserirCliente),\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Dados Pessoais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('nome')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$nome = errors.nome) === null || _errors$nome === void 0 ? void 0 : _errors$nome.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"CPF:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('cpf')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_errors$cpf = errors.cpf) === null || _errors$cpf === void 0 ? void 0 : _errors$cpf.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Criar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Endere\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"CEP:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('cep')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Rua:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('rua')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"N\\xFAmero:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('numero')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Bairro:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('bairro')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cidade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register('cep')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"painel\",\n      children: listaCliente.map((cli, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"etiqueta\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nome: \", cli.nome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"E-mail: \", cli.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"CPF: \", cli.cpf]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EtiquetasHookForm, \"S+5MyMkoIfVNgRYDbV5tV0v+7dg=\", false, function () {\n  return [useForm];\n});\n\n_c = EtiquetasHookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EtiquetasHookForm\");","map":{"version":3,"names":["useState","DivEtiqueta","useForm","yupResolver","yup","schema","object","nome","string","required","email","cpf","min","EtiquetasHookForm","register","handleSubmit","formState","errors","resolver","listaCliente","setListaCliente","inserirCliente","cliente","message","map","cli","index"],"sources":["/home/higor/Documentos/web/aula08/src/components/EtiquetasHookForm.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { DivEtiqueta } from '../styled'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nconst schema = yup.object({\r\n    nome: yup.string().required(\"O nome é obrigatório\"),\r\n    email: yup.string().email(\"Digite um e-mail válido!\").required(\"O e-mail é obrigatório\"),\r\n    cpf: yup.string().min(11,\"O CPF deve ter pelo menos 11 digitos\").required(\"O CPF é obrigatório\")\r\n}).required()\r\n\r\n\r\nexport default function EtiquetasHookForm(){\r\n\r\n    const {register, handleSubmit, formState:{errors}} = useForm(\r\n        {resolver: yupResolver(schema)}\r\n    )\r\n    const [listaCliente, setListaCliente] = useState([])\r\n\r\n    function inserirCliente(cliente){\r\n        setListaCliente([...listaCliente, cliente])\r\n    }\r\n\r\n    return(\r\n        <DivEtiqueta>\r\n            <form onSubmit={handleSubmit(inserirCliente)}>\r\n                <fieldset>\r\n                    <legend>Dados Pessoais</legend>\r\n                    <label>Nome:\r\n                        <input type=\"text\" {...register('nome')} />\r\n                        <span>{errors.nome?.message}</span>\r\n                    </label>\r\n                    <label>E-mail:\r\n                        <input type=\"text\" {...register('email')}/>\r\n                        <span>{errors.email?.message}</span>\r\n                    </label>\r\n                    <label>CPF:\r\n                        <input type=\"text\" {...register('cpf')} />\r\n                        <span>{errors.cpf?.message}</span>\r\n                    </label>\r\n                    <button type='submit'>Criar</button>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Endereço</legend>\r\n                    <label>\r\n                        CEP: \r\n                        <input type=\"text\" {...register('cep')} />\r\n                    </label>\r\n                    <label>\r\n                        Rua: \r\n                        <input type=\"text\" {...register('rua')} />\r\n                    </label>\r\n                    <label>\r\n                        Número: \r\n                        <input type=\"text\" {...register('numero')} />\r\n                    </label>\r\n                    <label>\r\n                        Bairro: \r\n                        <input type=\"text\" {...register('bairro')} />\r\n                    </label>\r\n                    <label>\r\n                        Cidade: \r\n                        <input type=\"text\" {...register('cep')} />\r\n                    </label>\r\n                </fieldset>\r\n            </form>\r\n            <div className=\"painel\">\r\n                {\r\n                    listaCliente.map((cli, index)=>                    \r\n                <div className=\"etiqueta\" key={index}>\r\n                    <p>Nome: {cli.nome}</p>\r\n                    <p>E-mail: {cli.email}</p>\r\n                    <p>CPF: {cli.cpf}</p>\r\n                </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </DivEtiqueta>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}